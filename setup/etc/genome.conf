########################################################################
# SGMS CONFIGURATION
########################################################################

export GENOME_SYS_ID=REPLACE_GENOME_SYS_ID

export GENOME_ROOT=REPLACE_GENOME_HOME
export GENOME_HOME=REPLACE_GENOME_HOME

echo setting GENOME_* variables...

export GENOME_SYS_SERVICES_MEMCACHE='localhost:11211'
export GENOME_SYS_SERVICES_SOLR='http://localhost:8080/localhost'
export GENOME_SYS_SERVICES_SEARCH_URL='http://localhost/'
export GENOME_SYS_SERVICES_WIKI_URL='http://localhost/mediawiki/'
export GENOME_SYS_SERVICES_WEB_VIEW_URL='http://localhost'

export GENOME_STATSD_HOST='localhost'
export GENOME_STATSD_PORT=8125

# set our internal paths for data and software
export GENOME_DB=$GENOME_HOME/db
export GENOME_SW=$GENOME_HOME/sw/apps
export GENOME_SW_LEGACY_JAVA=$GENOME_HOME/sw/java
export GENOME_SW_IGNORE=''
export GENOME_SYS_GROUP='genome'
export GENOME_SYS_UMASK=0002
export GENOME_FS_LOCAL_NETWORK_CACHE=$GENOME_HOME/var/cache/san

# export GENOME_LSF_QUEUE_*
export GENOME_LSF_QUEUE_ALIGNMENT_DEFAULT='alignment'
export GENOME_LSF_QUEUE_ALIGNMENT_PROD='alignment-pd'
export GENOME_LSF_QUEUE_ASSEMBLY='assembly'
export GENOME_LSF_QUEUE_BIGMEM='bigmem'
export GENOME_LSF_QUEUE_BUILD_WORKER='long'
export GENOME_LSF_QUEUE_BUILD_WORKER_ALT='apipe'
export GENOME_LSF_QUEUE_BUILD_WORKFLOW='workflow'
export GENOME_LSF_QUEUE_DV2_WORKER='apipe'
export GENOME_LSF_QUEUE_DV2_WORKFLOW='long'
export GENOME_LSF_QUEUE_SHORT='short'

# export GENOME_DISK_GROUP_*
export GENOME_DISK_GROUP_ARCHIVE='info_archive'
export GENOME_DISK_GROUP_DEV='info_apipe'
export GENOME_DISK_GROUP_REFERENCES='info_apipe_ref'
export GENOME_DISK_GROUP_MODELS='info_genome_models'
export GENOME_DISK_GROUP_ALIGNMENTS='info_alignments'
export GENOME_DISK_GROUP_RESEARCH='research'
export GENOME_DISK_GROUP_TRASH='info_apipe_trash'
export GENOME_DISK_GROUP_READS='reads'
export GENOME_DISK_GROUP_BENCHMARKING='systems_benchmarking'

# GMSchema
export GENOME_DS_GMSCHEMA_TYPE='UR::DataSource::Pg'
export GENOME_DS_GMSCHEMA_SERVER='dbname=genome' 
export GENOME_DS_GMSCHEMA_LOGIN='genome'
export GENOME_DS_GMSCHEMA_AUTH='changeme'
export GENOME_DS_GMSCHEMA_OWNER='public'

# DGIdb
export GENOME_DS_DGIDB_TYPE=$GENOME_DS_GMSCHEMA_TYPE
export GENOME_DS_DGIDB_SERVER='dbname=genome;host=postgres'
export GENOME_DS_DGIDB_LOGIN=$GENOME_DS_GMSCHEMA_LOGIN
export GENOME_DS_DGIDB_AUTH=$GENOME_DS_GMSCHEMA_AUTH
export GENOME_DS_DGIDB_OWNER=$GENOME_DS_GMSCHEMA_OWNER

# dwrac
export GENOME_DS_DWRAC_TYPE=$GENOME_DS_GMSCHEMA_TYPE
export GENOME_DS_DWRAC_SERVER=$GENOME_DS_GMSCHEMA_SERVER
export GENOME_DS_DWRAC_LOGIN=$GENOME_DS_GMSCHEMA_LOGIN
export GENOME_DS_DWRAC_AUTH=$GENOME_DS_GMSCHEMA_AUTH
export GENOME_DS_DWRAC_OWNER=$GENOME_DS_GMSCHEMA_OWNER

# oltp
export GENOME_DS_OLTP_TYPE=$GENOME_DS_GMSCHEMA_TYPE
export GENOME_DS_OLTP_SERVER=$GENOME_DS_GMSCHEMA_SERVER
export GENOME_DS_OLTP_LOGIN=$GENOME_DS_GMSCHEMA_LOGIN
export GENOME_DS_OLTP_AUTH=$GENOME_DS_GMSCHEMA_AUTH
export GENOME_DS_OLTP_OWNER=$GENOME_DS_GMSCHEMA_OWNER

# configure our local ensembl db
export GENOME_DB_ENSEMBL_DEFAULT_IMPORTED_ANNOTATION_BUILD='122704720'
export GENOME_DB_ENSEMBL_HOST='mysql1'
export GENOME_DB_ENSEMBL_USER='mse'
export GENOME_DB_ENSEMBL_PORT='3306'

# default nomenclature for new instrument data and sample attributes
export GENOME_NOMENCLATURE_DEFAULT='GMS'

# log directory
export GENOME_LOG_DIR=$GENOME_HOME/var/log

# set default analysis project configuration path
export GENOME_ANALYSIS_PROJECT_DEFAULTS='$GENOME_HOME/default_config_menu_items'

export GENOME_LOCK_DIR=$GENOME_HOME/var/lock
#export GENOME_DB_PAUSE='$GENOME_HOME/pause_updates'
#export GENOME_DB_QUERY_PAUSE='/gsc/var/lock/database/pause_queries'

# testsuite data
GENOME_TEST_INPUTS=$GENOME_HOME/db/gms-test-data/latest
if [ -L "$GENOME_TEST_INPUTS" ]; then
    GENOME_TEST_INPUTS=$(readlink "$GENOME_TEST_INPUTS")
fi
export GENOME_TEST_INPUTS
export GENOME_SYS_SERVICES_FILES_URL='http://localhost'
export GENOME_TEST_URL="${GENOME_SYS_SERVICES_FILES_URL}/${GENOME_TEST_INPUTS}"

# email
export GENOME_EMAIL_DOMAIN='http://localhost'
export GENOME_EMAIL_SMTP_SERVER=REPLACE_GENOME_HOST
export GENOME_EMAIL_PIPELINE='apipe@example.com'                 # Used as the source of some system emails
export GENOME_EMAIL_PIPELINE_NOISY='apipe-run@example.com'       # recepient alias for noisy system emails
export GENOME_EMAIL_TEST='fakeguy@example.com'                   # Used in some tests
export GENOME_EMAIL_NOREPLY='donotreply@example.com'
export GENOME_EMAIL_ILLUMINA_BWA='illumina-bwa@example.com'
export GENOME_EMAIL_VIROME_SCREENING='virome-screen@example.com'
export GENOME_EMAIL_ANNOTATION='annopipe@example.com'           # for report generated by Genome/Model/Tools/Ber/BerRunFinish.pm


#SGMS SPECIFIC GENOME VARIABLES
export GENOME_USER_EMAIL="gmsuser@example.com"
export GENOME_CONFIG="Genome::Site::SGMS"

#WORKFLOW VARIABLES
export WF_SERVER_QUEUE=normal
export WF_JOB_QUEUE=normal
export WF_TEST_QUEUE=normal
export WF_EXCLUDE_JOB_GROUP=1 
export WF_LSF_PROJECT=LAVATEST
export WF_STATSD_HOST='localhost'
export WF_STATSD_PORT='8125'
export WF_LOW_RESOURCES=0


#ADDITIONAL SGMS CONFIGURATION
#env | grep ^GENOME_
#env | grep ^WF_

echo updating PATH, PERL5LIB, and CLASSPATH for the GMS
export PATH=$GENOME_HOME/sw/ur/bin:$GENOME_HOME/sw/workflow/bin:$GENOME_HOME/sw/genome/bin:$GENOME_HOME/sw/legacy/bin:/opt/openlava-2.2/bin:$PATH
export PATH=$GENOME_HOME/sw/apps/R/R-2.15.2/bin_safe:$PATH
export PERL5LIB=$GENOME_HOME/sw/ur/lib:$GENOME_HOME/sw/workflow/lib:$GENOME_HOME/sw/genome/lib/perl:$GENOME_HOME/sw/genome/lib/perl-added:$PERL5LIB:/usr/lib/perl5/x86_64-linux-gnu-thread-multi/
export CLASSPATH=$GENOME_HOME/sw/apps/rdp-classifier/2.2/rdp_classifier-2.2.jar:$GENOME_HOME/sw/apps/rdp-classifier/2.1/rdp_classifier-2.1.jar:$CLASSPATH

echo configuring tab-completion...
function _getopt_complete () {
    COMPREPLY=($( COMP_CWORD=$COMP_CWORD perl `which ${COMP_WORDS[0]}` ${COMP_WORDS[@]:0} ));
}

bash=${BASH_VERSION%.*}; bmajor=${bash%.*}; bminor=${bash#*.}

if [ "$bmajor" -eq 2 -a "$bminor" '>' 04 ] || [ "$bmajor" -gt 2 ]; then
    complete -F _getopt_complete genome
    complete -F _getopt_complete gmt
    complete -F _getopt_complete ur
    complete -F _getopt_complete workflow
fi

